/*
 * generated by Xtext 2.24.0
 */
package org.palladiosimulator.dataflow.confidentiality.pcm.dddsl.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith
import org.palladiosimulator.dataflow.confidentiality.pcm.model.confidentiality.dictionary.PCMDataDictionary
import static org.hamcrest.MatcherAssert.*
import static org.hamcrest.CoreMatchers.*

@ExtendWith(InjectionExtension)
@InjectWith(DDDslInjectorProvider)
class DDDslParsingTest {
	@Inject
	ParseHelper<PCMDataDictionary> parseHelper

	@Test
	def void loadModel() {
		val result = parseHelper.parse('''
			dictionary id "123"
		''')
		Assertions.assertNotNull(result)
		val errors = result.eResource.errors
		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: «errors.join(", ")»''')
		assertThat(result.id, is("123"))
	}
}
